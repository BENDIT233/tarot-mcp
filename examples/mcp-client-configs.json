{
  "cursor_local_stdio": {
    "description": "Cursor IDE with local stdio transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "command": "node",
          "args": ["/path/to/tarot-mcp/dist/index.js"]
        }
      }
    }
  },
  "cursor_local_streamable": {
    "description": "Cursor IDE with Streamable HTTP transport (recommended)",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "http://localhost:3000/mcp"
        }
      }
    }
  },
  "cursor_local_fastmcp": {
    "description": "Cursor IDE with FastMCP HTTP transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "http://localhost:3000"
        }
      }
    }
  },
  "cursor_remote_streamable": {
    "description": "Cursor IDE with remote Streamable HTTP transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "https://your-domain.com/mcp"
        }
      }
    }
  },
  "claude_desktop": {
    "description": "Claude Desktop application",
    "config": {
      "mcpServers": {
        "tarot": {
          "command": "node",
          "args": ["/path/to/tarot-mcp/dist/index.js"]
        }
      }
    }
  },
  "vs_code_local": {
    "description": "VS Code with local server",
    "config": {
      "mcp": {
        "servers": {
          "tarot": {
            "type": "stdio",
            "command": "node",
            "args": ["/path/to/tarot-mcp/dist/index.js"]
          }
        }
      }
    }
  },
  "vs_code_streamable": {
    "description": "VS Code with Streamable HTTP server",
    "config": {
      "mcp": {
        "servers": {
          "tarot": {
            "type": "http",
            "url": "http://localhost:3000/mcp"
          }
        }
      }
    }
  },
  "vs_code_fastmcp": {
    "description": "VS Code with FastMCP server",
    "config": {
      "mcp": {
        "servers": {
          "tarot": {
            "type": "http",
            "url": "http://localhost:3000"
          }
        }
      }
    }
  },
  "windsurf_local": {
    "description": "Windsurf with local server",
    "config": {
      "mcpServers": {
        "tarot": {
          "command": "node",
          "args": ["/path/to/tarot-mcp/dist/index.js"]
        }
      }
    }
  },
  "windsurf_streamable": {
    "description": "Windsurf with Streamable HTTP transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "http://localhost:3000/mcp"
        }
      }
    }
  },
  "dify_integration": {
    "description": "Dify MCP integration (recommended configuration)",
    "config": {
      "mcp_server_url": "http://localhost:3000/mcp",
      "transport": "http",
      "timeout": 30000
    },
    "server_command": "node dist/index.js -t streamable -p 3000"
  },
  "context7_style": {
    "description": "Context7-style configuration for compatibility",
    "config": {
      "mcpServers": {
        "tarot": {
          "command": "npx",
          "args": ["-y", "tarot-mcp-server@latest"]
        }
      }
    }
  },
  "docker_compose_streamable": {
    "description": "Docker Compose with Streamable HTTP transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "http://localhost:3000/mcp"
        }
      }
    },
    "docker_compose": {
      "version": "3.8",
      "services": {
        "tarot-mcp": {
          "image": "tarot-mcp:latest",
          "ports": ["3000:3000"],
          "environment": [
            "NODE_ENV=production"
          ],
          "command": "node dist/index.js -t streamable -p 3000",
          "restart": "unless-stopped",
          "healthcheck": {
            "test": ["CMD", "curl", "-f", "http://localhost:3000/health"],
            "interval": "30s",
            "timeout": "10s",
            "retries": 3
          }
        }
      }
    }
  },
  "docker_compose_fastmcp": {
    "description": "Docker Compose with FastMCP transport",
    "config": {
      "mcpServers": {
        "tarot": {
          "url": "http://localhost:3000"
        }
      }
    },
    "docker_compose": {
      "version": "3.8",
      "services": {
        "tarot-mcp": {
          "image": "tarot-mcp:latest",
          "ports": ["3000:3000"],
          "environment": [
            "NODE_ENV=production"
          ],
          "command": "node dist/index.js -t fastmcp -p 3000",
          "restart": "unless-stopped"
        }
      }
    }
  }
}
